/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.xminds.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.Map;
/**
 * The linked item.
 */
@Schema(description = "The linked item.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-10T13:09:14.296+05:30[Asia/Kolkata]")
public class RemoteObject extends HashMap<String, Object> {
  @JsonProperty("url")
  private String url = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("summary")
  private String summary = null;

  @JsonProperty("icon")
  private AllOfRemoteObjectIcon icon = null;

  @JsonProperty("status")
  private AllOfRemoteObjectStatus status = null;

  public RemoteObject url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The URL of the item.
   * @return url
  **/
  @Schema(required = true, description = "The URL of the item.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public RemoteObject title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the item.
   * @return title
  **/
  @Schema(required = true, description = "The title of the item.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public RemoteObject summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * The summary details of the item.
   * @return summary
  **/
  @Schema(description = "The summary details of the item.")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public RemoteObject icon(AllOfRemoteObjectIcon icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.
   * @return icon
  **/
  @Schema(description = "Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.")
  public AllOfRemoteObjectIcon getIcon() {
    return icon;
  }

  public void setIcon(AllOfRemoteObjectIcon icon) {
    this.icon = icon;
  }

  public RemoteObject status(AllOfRemoteObjectStatus status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the item.
   * @return status
  **/
  @Schema(description = "The status of the item.")
  public AllOfRemoteObjectStatus getStatus() {
    return status;
  }

  public void setStatus(AllOfRemoteObjectStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteObject remoteObject = (RemoteObject) o;
    return Objects.equals(this.url, remoteObject.url) &&
        Objects.equals(this.title, remoteObject.title) &&
        Objects.equals(this.summary, remoteObject.summary) &&
        Objects.equals(this.icon, remoteObject.icon) &&
        Objects.equals(this.status, remoteObject.status) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, title, summary, icon, status, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteObject {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

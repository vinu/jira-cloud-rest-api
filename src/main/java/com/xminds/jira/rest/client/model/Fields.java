/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.xminds.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.xminds.jira.rest.client.model.IssueTypeDetails;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Key fields from the linked issue.
 */
@Schema(description = "Key fields from the linked issue.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-10T13:09:14.296+05:30[Asia/Kolkata]")
public class Fields {
  @JsonProperty("summary")
  private String summary = null;

  @JsonProperty("status")
  private AllOfFieldsStatus status = null;

  @JsonProperty("priority")
  private AllOfFieldsPriority priority = null;

  @JsonProperty("assignee")
  private AllOfFieldsAssignee assignee = null;

  @JsonProperty("timetracking")
  private AllOfFieldsTimetracking timetracking = null;

  @JsonProperty("issuetype")
  private IssueTypeDetails issuetype = null;

  @JsonProperty("issueType")
  private AllOfFieldsIssueType issueType = null;

   /**
   * The summary description of the linked issue.
   * @return summary
  **/
  @Schema(description = "The summary description of the linked issue.")
  public String getSummary() {
    return summary;
  }

   /**
   * The status of the linked issue.
   * @return status
  **/
  @Schema(description = "The status of the linked issue.")
  public AllOfFieldsStatus getStatus() {
    return status;
  }

   /**
   * The priority of the linked issue.
   * @return priority
  **/
  @Schema(description = "The priority of the linked issue.")
  public AllOfFieldsPriority getPriority() {
    return priority;
  }

   /**
   * The assignee of the linked issue.
   * @return assignee
  **/
  @Schema(description = "The assignee of the linked issue.")
  public AllOfFieldsAssignee getAssignee() {
    return assignee;
  }

   /**
   * The time tracking of the linked issue.
   * @return timetracking
  **/
  @Schema(description = "The time tracking of the linked issue.")
  public AllOfFieldsTimetracking getTimetracking() {
    return timetracking;
  }

  public Fields issuetype(IssueTypeDetails issuetype) {
    this.issuetype = issuetype;
    return this;
  }

   /**
   * Get issuetype
   * @return issuetype
  **/
  @Schema(description = "")
  public IssueTypeDetails getIssuetype() {
    return issuetype;
  }

  public void setIssuetype(IssueTypeDetails issuetype) {
    this.issuetype = issuetype;
  }

   /**
   * The type of the linked issue.
   * @return issueType
  **/
  @Schema(description = "The type of the linked issue.")
  public AllOfFieldsIssueType getIssueType() {
    return issueType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fields fields = (Fields) o;
    return Objects.equals(this.summary, fields.summary) &&
        Objects.equals(this.status, fields.status) &&
        Objects.equals(this.priority, fields.priority) &&
        Objects.equals(this.assignee, fields.assignee) &&
        Objects.equals(this.timetracking, fields.timetracking) &&
        Objects.equals(this.issuetype, fields.issuetype) &&
        Objects.equals(this.issueType, fields.issueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(summary, status, priority, assignee, timetracking, issuetype, issueType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fields {\n");
    
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
    sb.append("    timetracking: ").append(toIndentedString(timetracking)).append("\n");
    sb.append("    issuetype: ").append(toIndentedString(issuetype)).append("\n");
    sb.append("    issueType: ").append(toIndentedString(issueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.xminds.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.Map;
/**
 * Counts of the number of issues in various statuses.
 */
@Schema(description = "Counts of the number of issues in various statuses.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-10T13:09:14.296+05:30[Asia/Kolkata]")
public class VersionIssuesStatus extends HashMap<String, Object> {
  @JsonProperty("unmapped")
  private Long unmapped = null;

  @JsonProperty("toDo")
  private Long toDo = null;

  @JsonProperty("inProgress")
  private Long inProgress = null;

  @JsonProperty("done")
  private Long done = null;

   /**
   * Count of issues with a status other than *to do*, *in progress*, and *done*.
   * @return unmapped
  **/
  @Schema(description = "Count of issues with a status other than *to do*, *in progress*, and *done*.")
  public Long getUnmapped() {
    return unmapped;
  }

   /**
   * Count of issues with status *to do*.
   * @return toDo
  **/
  @Schema(description = "Count of issues with status *to do*.")
  public Long getToDo() {
    return toDo;
  }

   /**
   * Count of issues with status *in progress*.
   * @return inProgress
  **/
  @Schema(description = "Count of issues with status *in progress*.")
  public Long getInProgress() {
    return inProgress;
  }

   /**
   * Count of issues with status *done*.
   * @return done
  **/
  @Schema(description = "Count of issues with status *done*.")
  public Long getDone() {
    return done;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionIssuesStatus versionIssuesStatus = (VersionIssuesStatus) o;
    return Objects.equals(this.unmapped, versionIssuesStatus.unmapped) &&
        Objects.equals(this.toDo, versionIssuesStatus.toDo) &&
        Objects.equals(this.inProgress, versionIssuesStatus.inProgress) &&
        Objects.equals(this.done, versionIssuesStatus.done) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unmapped, toDo, inProgress, done, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionIssuesStatus {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    unmapped: ").append(toIndentedString(unmapped)).append("\n");
    sb.append("    toDo: ").append(toIndentedString(toDo)).append("\n");
    sb.append("    inProgress: ").append(toIndentedString(inProgress)).append("\n");
    sb.append("    done: ").append(toIndentedString(done)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

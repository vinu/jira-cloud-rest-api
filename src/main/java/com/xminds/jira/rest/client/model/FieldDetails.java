/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.xminds.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Details about a field.
 */
@Schema(description = "Details about a field.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-10T13:09:14.296+05:30[Asia/Kolkata]")
public class FieldDetails {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("key")
  private String key = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("custom")
  private Boolean custom = null;

  @JsonProperty("orderable")
  private Boolean orderable = null;

  @JsonProperty("navigable")
  private Boolean navigable = null;

  @JsonProperty("searchable")
  private Boolean searchable = null;

  @JsonProperty("clauseNames")
  private List<String> clauseNames = null;

  @JsonProperty("scope")
  private AllOfFieldDetailsScope scope = null;

  @JsonProperty("schema")
  private AllOfFieldDetailsSchema schema = null;

  public FieldDetails id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the field.
   * @return id
  **/
  @Schema(description = "The ID of the field.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FieldDetails key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The key of the field.
   * @return key
  **/
  @Schema(description = "The key of the field.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public FieldDetails name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the field.
   * @return name
  **/
  @Schema(description = "The name of the field.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FieldDetails custom(Boolean custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Whether the field is a custom field.
   * @return custom
  **/
  @Schema(description = "Whether the field is a custom field.")
  public Boolean isCustom() {
    return custom;
  }

  public void setCustom(Boolean custom) {
    this.custom = custom;
  }

  public FieldDetails orderable(Boolean orderable) {
    this.orderable = orderable;
    return this;
  }

   /**
   * Whether the content of the field can be used to order lists.
   * @return orderable
  **/
  @Schema(description = "Whether the content of the field can be used to order lists.")
  public Boolean isOrderable() {
    return orderable;
  }

  public void setOrderable(Boolean orderable) {
    this.orderable = orderable;
  }

  public FieldDetails navigable(Boolean navigable) {
    this.navigable = navigable;
    return this;
  }

   /**
   * Whether the field can be used as a column on the issue navigator.
   * @return navigable
  **/
  @Schema(description = "Whether the field can be used as a column on the issue navigator.")
  public Boolean isNavigable() {
    return navigable;
  }

  public void setNavigable(Boolean navigable) {
    this.navigable = navigable;
  }

  public FieldDetails searchable(Boolean searchable) {
    this.searchable = searchable;
    return this;
  }

   /**
   * Whether the content of the field can be searched.
   * @return searchable
  **/
  @Schema(description = "Whether the content of the field can be searched.")
  public Boolean isSearchable() {
    return searchable;
  }

  public void setSearchable(Boolean searchable) {
    this.searchable = searchable;
  }

  public FieldDetails clauseNames(List<String> clauseNames) {
    this.clauseNames = clauseNames;
    return this;
  }

  public FieldDetails addClauseNamesItem(String clauseNamesItem) {
    if (this.clauseNames == null) {
      this.clauseNames = new ArrayList<String>();
    }
    this.clauseNames.add(clauseNamesItem);
    return this;
  }

   /**
   * The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).
   * @return clauseNames
  **/
  @Schema(description = "The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).")
  public List<String> getClauseNames() {
    return clauseNames;
  }

  public void setClauseNames(List<String> clauseNames) {
    this.clauseNames = clauseNames;
  }

  public FieldDetails scope(AllOfFieldDetailsScope scope) {
    this.scope = scope;
    return this;
  }

   /**
   * The scope of the field.
   * @return scope
  **/
  @Schema(description = "The scope of the field.")
  public AllOfFieldDetailsScope getScope() {
    return scope;
  }

  public void setScope(AllOfFieldDetailsScope scope) {
    this.scope = scope;
  }

  public FieldDetails schema(AllOfFieldDetailsSchema schema) {
    this.schema = schema;
    return this;
  }

   /**
   * The data schema for the field.
   * @return schema
  **/
  @Schema(description = "The data schema for the field.")
  public AllOfFieldDetailsSchema getSchema() {
    return schema;
  }

  public void setSchema(AllOfFieldDetailsSchema schema) {
    this.schema = schema;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldDetails fieldDetails = (FieldDetails) o;
    return Objects.equals(this.id, fieldDetails.id) &&
        Objects.equals(this.key, fieldDetails.key) &&
        Objects.equals(this.name, fieldDetails.name) &&
        Objects.equals(this.custom, fieldDetails.custom) &&
        Objects.equals(this.orderable, fieldDetails.orderable) &&
        Objects.equals(this.navigable, fieldDetails.navigable) &&
        Objects.equals(this.searchable, fieldDetails.searchable) &&
        Objects.equals(this.clauseNames, fieldDetails.clauseNames) &&
        Objects.equals(this.scope, fieldDetails.scope) &&
        Objects.equals(this.schema, fieldDetails.schema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, key, name, custom, orderable, navigable, searchable, clauseNames, scope, schema);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldDetails {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    orderable: ").append(toIndentedString(orderable)).append("\n");
    sb.append("    navigable: ").append(toIndentedString(navigable)).append("\n");
    sb.append("    searchable: ").append(toIndentedString(searchable)).append("\n");
    sb.append("    clauseNames: ").append(toIndentedString(clauseNames)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
